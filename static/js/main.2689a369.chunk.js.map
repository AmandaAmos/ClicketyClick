{"version":3,"sources":["components/Card/index.js","components/Score/index.js","App.js","index.js"],"names":["Card","props","className","onClick","clickedImage","id","alt","variety","src","image","Score","title","score","topScore","shuffle","array","i","length","j","Math","floor","random","App","state","roses","showAlert","showSuccess","clickedroses","setState","indexOf","push","console","log","handleIncrement","makeShuffle","this","map","key","style","opacity","Component","ReactDOM","render","document","getElementById"],"mappings":"m1CAkBeA,G,MAdF,SAACC,GAAD,OACX,yBAAKC,UAAU,OAAOC,QAAS,kBAAMF,EAAMG,aAAaH,EAAMI,MAC5D,yBAAKH,UAAU,iBACb,yBAAKI,IAAKL,EAAMM,QAASC,IAAKP,EAAMQ,QACpC,yBAAKP,UAAU,WACb,yBAAKA,UAAU,QACZD,EAAMM,QACP,mC,MCcKG,MAtBf,SAAeT,GACb,OACE,4BAAQC,UAAU,SAChB,yBAAKA,UAAU,wBAEX,4BAAKD,EAAMU,OACb,yBAAKT,UAAU,sBACd,0CAAgBD,EAAMW,QAEvB,yBAAKV,UAAU,sBACb,8CAAoBD,EAAMY,YAG9B,yBAAKX,UAAU,MAAMG,GAAG,WACtB,yBAAKH,UAAU,wBACb,kGCXV,SAASY,EAAQC,GACf,IAAK,IAAIC,EAAID,EAAME,OAAS,EAAGD,EAAI,EAAGA,IAAK,CACzC,IAAME,EAAIC,KAAKC,MAAMD,KAAKE,UAAYL,EAAI,IADD,EAElB,CAACD,EAAMG,GAAIH,EAAMC,IAAvCD,EAAMC,GAFkC,KAE9BD,EAAMG,GAFwB,KAI3C,OAAOH,E,IAuGMO,E,4MAnGbC,MAAQ,CACNC,QACAZ,MAAO,EACPC,SAAU,EACVY,UAAW,EACXC,YAAa,EACbC,aAAc,I,EAGhBvB,aAAe,SAACC,GACd,IAAIsB,EAAe,EAAKJ,MAAMI,aAC1Bf,EAAQ,EAAKW,MAAMX,MACnBC,EAAW,EAAKU,MAAMV,SAC1B,EAAKe,SAAS,CACZH,UAAW,KAGqB,IAA9BE,EAAaE,QAAQxB,IAEvBsB,EAAaG,KAAKzB,GAClB0B,QAAQC,IAAIL,GAEZ,EAAKM,kBAEL,EAAKC,eACyB,KAArB,EAAKX,MAAMX,MAEpB,EAAKgB,SAAS,CACZF,YAAa,EACbd,MAAO,EACPe,aAAc,MAIhB,EAAKC,SAAS,CACZhB,MAAO,EACPe,aAAc,KAEhBI,QAAQC,IAAI,aACZ,EAAKJ,SAAS,CACZH,UAAW,KAGXb,EAAQC,GACV,EAAKe,SAAS,CACZf,SAAUD,K,EAKhBqB,gBAAkB,WAEhB,EAAKL,SAAS,CAAEhB,MAAO,EAAKW,MAAMX,MAAQ,K,EAI5CsB,YAAc,WACZ,EAAKN,SAAS,CAAEJ,MAAOV,EAAQU,M,uDAIvB,IAAD,OACP,OACE,yBAAKtB,UAAU,aAEb,kBAAC,EAAD,CACES,MAAM,oBACNC,MAAOuB,KAAKZ,MAAMX,MAClBC,SAAUsB,KAAKZ,MAAMV,WAGvB,yBAAKX,UAAU,OACZiC,KAAKZ,MAAMC,MAAMY,KAAI,SAACZ,GAAD,OACpB,kBAAC,EAAD,CACEa,IAAKb,EAAMnB,GACXA,GAAImB,EAAMnB,GACVE,QAASiB,EAAMjB,QACfE,MAAOe,EAAMf,MACbL,aAAc,EAAKA,kBAIvB,yBACEF,UAAU,mBACVoC,MAAO,CAAEC,QAASJ,KAAKZ,MAAME,YAF/B,mDAMA,yBACEvB,UAAU,sBACVoC,MAAO,CAAEC,QAASJ,KAAKZ,MAAMG,cAF/B,wD,GAzFQc,aCXlBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.2689a369.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./card.css\";\r\n\r\n\r\nconst Card = (props) => (\r\n  <div className=\"card\" onClick={() => props.clickedImage(props.id)}>\r\n    <div className=\"img-container\">\r\n      <img alt={props.variety} src={props.image} />\r\n      <div className=\"overlay\">\r\n        <div className=\"text\">\r\n          {props.variety}\r\n          <br />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\nimport \"./score.css\";\r\n\r\nfunction Score(props) {\r\n  return (\r\n    <header className=\"score\">\r\n      <div className=\"col-md-12 col-center\">\r\n        \r\n          <h4>{props.title}</h4>\r\n        <div className=\"col-md-9 col-right\">\r\n         <h6>High Score {props.score}</h6>\r\n         </div>\r\n        <div className=\"col-md-9 col-right\">\r\n          <h6>Current Score: {props.topScore}</h6>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\" id=\"tagline\">\r\n        <div className=\"col-md-12 col-center\">\r\n          <h6>Stop and smell the Roses, but only click on each variety once!</h6>\r\n        </div>\r\n      </div>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Score;\r\n","import React, { Component } from \"react\";\n//import { Route } from \"react-dom\";\nimport roses from \"./cards.json\";\nimport Card from \"./components/Card\";\nimport Score from \"./components/Score\";\n\n//shuffle function\nfunction shuffle(array) {\n  for (let i = array.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [array[i], array[j]] = [array[j], array[i]];\n  }\n  return array;\n}\n\nclass App extends Component {\n  state = {\n    roses,\n    score: 0,\n    topScore: 0,\n    showAlert: 0,\n    showSuccess: 0,\n    clickedroses: [],\n  };\n\n  clickedImage = (id) => {\n    let clickedroses = this.state.clickedroses;\n    let score = this.state.score;\n    let topScore = this.state.topScore;\n    this.setState({\n      showAlert: 0,\n    });\n\n    if (clickedroses.indexOf(id) === -1) {\n      //push id into the array to be stored\n      clickedroses.push(id);\n      console.log(clickedroses);\n      //run the score function\n      this.handleIncrement();\n      //reshuffle function after each click\n      this.makeShuffle();\n    } else if (this.state.score === 12) {\n      //alert player wins\n      this.setState({\n        showSuccess: 1,\n        score: 0,\n        clickedroses: [],\n      });\n    } else {\n      //alert player of loss\n      this.setState({\n        score: 0,\n        clickedroses: [],\n      });\n      console.log(\"Duplicate\");\n      this.setState({\n        showAlert: 1,\n      });\n    }\n    if (score > topScore) {\n      this.setState({\n        topScore: score,\n      });\n    }\n  };\n  //handleIncrement increases this.state.score +1\n  handleIncrement = () => {\n    //setState updates components states\n    this.setState({ score: this.state.score + 1 });\n  };\n\n  //shuffle images\n  makeShuffle = () => {\n    this.setState({ roses: shuffle(roses) });\n  };\n\n  //render time!\n  render() {\n    return (\n      <div className=\"container\">\n      \n        <Score\n          title=\"Roses clicky Game\"\n          score={this.state.score}\n          topScore={this.state.topScore}\n        />\n        \n        <div className=\"row\">\n          {this.state.roses.map((roses) => (\n            <Card\n              key={roses.id}\n              id={roses.id}\n              variety={roses.variety}\n              image={roses.image}\n              clickedImage={this.clickedImage}\n            />\n          ))}\n\n          <div\n            className=\"alert alert-dark\"\n            style={{ opacity: this.state.showAlert }}\n          >\n            You've already smelled this rose, choose again.\n          </div>\n          <div\n            className=\"alert alert-success\" \n            style={{ opacity: this.state.showSuccess }}\n          >\n            Keep going! You haven't clicked on duplicates!\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n"],"sourceRoot":""}